The ``100-matrix_mul`` module
======================

Using ``matrix_mul``
-------------------

Importing the function from the module:
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

divides two integers and returns the result.

Examples:
# Test case 1: Basic multiplication
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

# Test case 2: Division with floating-point numbers
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

#Test case 3: added a letter
>>> matrix_mul([[1, 2], [3, 'a']], [[5, 6], [7, 8]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

Test case 4: added a letter
>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 'b']])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

Test case 7: added character as string
>>> matrix_mul('a', [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

Test case 8: ismatching matrices
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4,]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
